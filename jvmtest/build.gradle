apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.lee.gradle'
apply plugin: com.zm.jvmtest.MySecondPlugin
apply from: rootProject.getRootDir().getAbsolutePath() + "/utils.gradle"

println "package name is ${getVersionNameAdvanced()}"

task myTask(type:Copy){
    println "myTask exec"
}
//task myTask << {println "myTask doLast"}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn myTask
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.zm.jvmtest"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

//buildscript {
//    repositories {
//        maven {//本地Maven仓库地址
//            url uri('D:/repos')
//        }
//    }
//    dependencies {
//        //格式为-->group:module:version
//        classpath 'com.lee.plugin:mytestplugin:4.0.0'
//    }
//}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}

gradle.taskGraph.whenReady {graph -> println "when graph ready:"+graph}
gradle.buildFinished {r -> println "build finished"}

def runtime_config_file = 'jvmtest/src/main/assets/runtime_config'

project.afterEvaluate {
    //找到 preDebugBuild 任务，然后添加一个 Action
    tasks.getByName("preDebugBuild") {
        it.doFirst {
            println "generate debug configuration for ${project.name}"
            def configFile = new File(runtime_config_file)
            configFile.withOutputStream { os ->
                os << 'I am Debug\n' //往配置文件里写 I am Debug
            }
        }
    }
}
